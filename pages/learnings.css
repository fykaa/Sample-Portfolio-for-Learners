/* There are 3 ways to add CSS
Internal: inside head tag in style tag          <style> div{ color:color: pink; background-color: blue;} </style>

PRIORITY: EXTERNAL > INLINE > INTERNAL

Types of CSS Selectors:
-CSS id Selector                #id
-CSS class Selector             .class
-The CSS grouping Selector      div, span, footer{}

Types Of Position Property :
There are five types of position property :
 -static-- default
 -relative--relative to its normal positon and will leave a gap at its normal position
 -absolute--relative to the positon of its first parent
 -fixed--relative to the browser window;
 -sticky--relative to the users scroll position

Flexbox- flexible box
We create flexbox using display none

    # flex container - body of flexbox
    # flex item - items in container
    # main axis - horizontal length of container
    # cross axis - vertical length of container
    # main start - left vertical border
    # cross start - top horizontal border
    # main size - horizontal length of item
    # cross size - vertical length of item
    # main end - left vertical border
    # cross end - left vertical border


MEDIA QUERY SYNTAX:
@media media-type and (media-feature){}


PSEUDO SELECTORS IN CSS:
div li p{} --if p is contained by any li which is contained by div
div > p --if p is right inside div then this CSS will be applied
div + p --if p is right after div i.e. p is the next sibling of div

@media screen and (min-width:800px){ content }


Variables
to create variable use '--'
root is the global variable here, Any custom properties written in the root variable can be accessed anywhere in the code.
:root{
            --primary-color: blue;
            --danger-color: red;
            --maxw: 333px;
        }



/* ------------------------------------------------------------------------------ */
/* IMPORTING A WEB FONT FROM GOOGLE - copy font's stylesheet link in the head tag of html and then USE teh font-family name wherever required*/
code {
  background-color: rgb(37, 26, 26);
  border: 1px solid #999;
  display: block;
  padding: 20px;
  border-radius: 50px;
}

:root {
  --light-color: brown;
  --dark-color: #410914;
  --text-color: white;
  /* to use these variables we use background-color: var(--light-color); */
}

* {
  font-family: "Cabin", "-apple-system", "BlinkMacSystemFont", "Segoe UI",
    "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans",
    Helvetica, "Neue", sans-serif;
  /* font-weight: bold;*/
  /* bold font-weight means 700 */
  /* font-style: italic; */
  font-weight: 600;
  font-size: 17px;
  /* line-height is distance between two lines */
  line-height: 43px;

  /* Border box- when you add padding the length of padding keeps adding to the width of container. But if you don't want to change the width with padding you can use border-box , it keeps the width constant irrespective of padding and margin */
  box-sizing: border-box;
}




body {
  background-image: url("https://cloud-fww00tdhd-hack-club-bot.vercel.app/0compute-ea4c57a4.png");

  /* background-color: black;
  background-color: rgb(0, 0, 0);
  background-color: #000000; */
  color: white;
}

.subhead {
  text-align: center;
  /* width: 244px; */
  margin: auto;

  /* rem- TIMES THE ROOT ELEMENT (HTML) */
  /* font-size: 2rem; */

  /* em-  TIMES THE PARENT ELEMENT */
  font-size: 2em;
}

/* HEADER SECTION */

header {
  position: sticky;
  top: 3px;
  /* z-index  will work only for position: relative, absolute, fixed , sticky. Not for static. larger z value covers smaller*/
  z-index: 1;
}

.navbar {
  background-color: #100f0f;
  border-radius: 34px;
  height: 70px;
  width: 100%;
}

.navbar ul {
  overflow: auto;
  /* adds scrollbar when box overflows  */
}

.navbar h1 {
  position: absolute;
  /* relative to the positon of its first parent i.e. navbar? */
  left: 60px;
  margin: 12px;
  padding: 5px 12px 80px 16px;
  float: left;
  font-size: 2rem;
  border-radius: 10px;
  /* box-shadow: offset-x offset-y blur-radius spread-radius color; */
  /* box-shadow: inset 0px 1px 24px 5px #410914; */
  box-shadow: 0px 1px 24px 5px #322528;
}

.navbar li {
  float: right;
  list-style: none;
  margin: 13px 20px;
}

.search {
  margin: 0px 19px;
  float: right;
  color: white;
  margin: 10px;
}

#logo {
  width: 64px;
  height: 64px;
}

.navbar input {
  border: 1px solid rgb(62, 58, 58);
  border-radius: 14px;
  padding: -1px 9px;
  width: 163px;
}

header nav li {
  list-style: none;
}

header nav li a {
  color: white;
  text-decoration: none;
}

header nav li a:hover {
  color: brown;
  background-color: white;
  border: 1px black solid;
  border-radius: 28px;
  padding: 6px;
}

header nav li a:visited {
  color: rgb(194, 123, 123);
}

header nav li a:active {
  background-color: darkred;
}

#image_to_hide {
  /* display: none; */
  /* this completely removes an HTML tag from the web page like it was never there. */
  visibility: hidden;
  /* this makes the tag invisible but will not remove the element, and it will still occupy the space on the page */
}

/* ABOUT SECTION */

.about {
  border-radius: 3px;
  padding: 34px;
  text-align: center;
  position: relative;
  /* relative to its normal positon */
  top: 30px;
  width: 97vw;
  /* vw-  the 1/100 times of the viewport width */
  background-image: url("https://img.freepik.com/free-photo/sunshine-clouds-sky-during-morning-background-blue-white-pastel-heaven-soft-focus-lens-flare-sunlight-abstract-blurred-cyan-gradient-peaceful-nature-open-view-out-windows-beautiful-summer-spring_1253-1094.jpg?w=996&t=st=1662131648~exp=1662132248~hmac=d231d69f4c7244c08f3521832d0c2282ab68111be98d87fcc871dd7fa2aff212");

  color: #100f0f;
  /* background-repeat: repeat-x; */
  /* background-repeat: repeat-y; */
  background-repeat: no-repeat;
  /* background-position: top center; */
  background-position: center;
  background-size: cover;
  /* Resize the background image to cover the entire container */
  z-index: -1;
}

/* link */
/* link with target set to blank */
a[target] {
  font-size: 1em;
  color: rgb(255, 0, 255);
}

/* link with target set to self */
a[target="_self"] {
  font-size: 14px;
  color: rgb(178, 181, 233);
}

/* list PROJECTS SECTION */

.project h3 {
  /* x y blur */
  text-shadow: 6px -3px 2px rgb(72, 32, 32);
}

/* using nth child pseudo selector */
li:nth-child(2) {
  color: cyan;
}

/* li:nth-child(3n+3){
      color: pink;
  }
  li:nth-child(even) {
      background-color: rgb(255, 72, 0);
  }
  li:nth-child(odd){
      color: orangered;
  } */

/* WORK SECTION */
.work table {
  border: 4px solid rgb(190, 89, 89);
  /* border-style: solid; */
  border-radius: 34px;
  padding: 34px;
  margin: 34px;
  /* margin: auto; */
}

.work td {
  background-color: #100f0f;
  opacity: 0.9;
}

/* GRID SECTION */

.gridcontainer {
  background-color: var(--light-color);
  display: grid;
  grid-column-gap: 1rem;
  grid-row-gap: 2rem;
  /* Grid is default in rows form     grid-template-rows: repeat(5, auto); */
  /* grid-template-columns: 300px 100px 100px; */
  /* grid-template-columns: 300px 100px auto; */
  /* grid-template-columns: 1fr 4fr 1fr;   */
  /* @divided width in 1+4+1= 6 parts? */
  grid-template-columns: repeat(5, auto);

  /* Making responsive grid */
  grid-template-rows: 1fr 1fr 4fr;
  grid-template-columns: repeat(4, 2fr);

  /* autofix and minmax: The benefit of auto-fit is that it will repeat the number of times it is necessary. The minmax will decide the minimum width given to any rows.*/
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

/* Spanning multiple rows/columns */
.griditem:first-child {
  grid-column-start: 2;
  grid-column-end: 4;
  grid-row-start: 4;
  grid-row-end: 2;

  /* THESE BOTH WILL WORK THE SAME, span means how many grids to cover after start position */
  /* grid-column: 5 / span 4;
      grid-row: 2 / span 4; */
}

.griditem {
  background-color: var(--dark-color);
  border-radius: 20px;
  margin: 9px;
  padding: 6px;
}

/* Two more topics in grid-
  1) Grid in Layout i.e.
          'section section section aside'
  2) media queries in grid:
  @media only screen and (max-width: 300px) section
      display:none;
  }
          */

/* One of the most confusion which now arises is what amongst floats, flexbox or grids should we use? The simple answer is, you are free to use any three of them irrespective of your website should look good and responsive and you should be comfortable with the development. You must always try to give the best user experience because itâ€™s the most important part of SEO. */

/* WRITE TO ME SECTION */
.write {
  float: none;
}

.write form {
  /* Now suppose we want to make an element inline as well as customize its width too, then in that case we can use inline-block */
      height: 800px;
      width: 100%; */
  color: #100f0f;
  background-image: url(https://19ykrv2pihpqm7ibg13ucgmb-wpengine.netdna-ssl.com/wp-content/uploads/2015/10/How-to-Write-Constructive-Feedback-Tht-Actually-Works-900x446.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 0px 0px;
  align-items: center;
  justify-content: center;
  font-size: 0.2em;
  line-height: 12px;
  padding: 34px 20px 34px 34px;
  /* top right bottom left */
  margin: 40px;

  border-style: solid;
  border-top: 7px solid rgb(111, 25, 25);
  border-bottom: 5px solid rgb(185, 143, 143);
  border-left: 20px solid rgb(173, 118, 118);
  border-right: 7px solid rgb(73, 30, 30);
  border-top-left-radius: 0px;
  border-top-right-radius: 271px;
  border-bottom-left-radius: 74px;
  border-bottom-right-radius: 0px;

  height: 150vh;
  /* vh- 1/100th times of height of browser */
  /* float: left;
      width: 20%; */
}

/* Using nth child pseudo selector */
input[type="email"] {
  font-style: italic;
}

.write form .box {
  display: inline;
  /* width: 400px; */
  margin-right: 60px;
}

.write form input,
select {
  font-family: "Cabin", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 800;
  background-color: #6d1022;
  color: white;
  padding: 0px 6px 6px 6px;
  border: none;
  cursor: pointer;
  font-size: 21px;
  margin: auto;
  height: 36px;
  border-radius: 14px;
}

.write form textarea {
  font-family: "Cabin", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 800;
  background-color: #6d1022;
  color: white;
  border: none;
  font-size: 21px;
  margin: auto;
  border-radius: 14px;
}

.write form input:hover {
  font-weight: 900;
  background-color: #9f8e92;
  color: rgb(49, 17, 17);
}

/* CONTACTS SECTION FLEXBOX SECTION */

.container {
  display: flex;
  height: 200px;
  width: 100%;
  background-color: #6d1022;
  border: 2px black solid;
  /* flex-direction: column; */
  /* flex-direction: column-reverse; */
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
}

.item {
  border: 2px solid black;
  border-radius: 9px;
  background-color: #410914;
  padding: 6px;
  /* ANIMATION  */
  /* cumpolsary for animation is relatiev position? */
  position: relative;
  animation-name: dancing;
  animation-duration: 1s;
  animation-iteration-count: 7;
  animation-fill-mode: alternate;
  animation-timing-function: ease-in-out;

  /* TRANSITION */
  transition-property: background-color;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
  transition-delay: 0.1s;

  /* Transition short hand property in one line */
  /* this is---> transition: background-color 1s ease-in-out 2s; */
  /* transition: all 1s ease-in-out .3s; */
}

.item:hover {
  background-color: #d72044;
  cursor: pointer;

  /* TRANSFORM */

  background-color: pink;
  /* transform: rotate(-45deg); */
  border-radius: 200px;
  /* transform: skew(40deg); */
  transform: scale(1.1);
  /* the box will grow 1.1 times the initial size */
  /* transform: translateX(123px);
              transform: translateY(123px); */
  /* transform: translate(123px, 123px); */
}

/* now for the animation name mentioned above giving the actions */
@keyframes dancing {

  /* 0% {
          top: 0px;
          left: 0px;
      }
      25% {
          top: 250px;
          left: 0px;
      }
      75% {
          top: 250px;
          left: 250px;
      }
      100% {
          top: 0px;
          left: 250px;
      } */
  from {
    width: 140px;
  }

  to {
    width: 109px;
  }
}

#item-1 {
  /* order: 2; */
  /* flex-grow: 12;
      flex-shrink: 30; */
  /* flex-basis: 200px; */
  /* flex: 2 1 2000px;*/
  /* flex-grow flex-shrink flex-basis */
  /* align-self: flex-start; */
  /* align-self: flex-end; */
  /* align-self: center; */
}

/* CSS SELECTORS */

div>p {
  /* decendent selector */
}

div p {
  /* child selector */
}

div+p {
  /* adjacent sibling selector */
}

div~p {
  /* general sibling selector */
}

/* pseudo classes */
input:disabled {
  background-color: crimson;
}

input:required {
}

input:placeholder-shown {
  background-color: rgb(47, 17, 23);
}

input:read-only {
  background-color: rgb(87, 61, 87);
}

input:invalid {
  background-color: rgb(255, 0, 0);
}

input:valid {
  border: 4px solid green;
}

input:in-range {
  color: green;
}

input:out-of-range {
  color: rgb(128, 0, 0);
}

/* user action pseudo classes */
li>button:hover {
  background-color: cornflowerblue;
  cursor: crosshair;
}

li>button:active {
  background-color: sienna;
  cursor: crosshair;
}

li>button:focus {
  background-color: #410914;
  cursor: crosshair;
}



/* footer */


.copyright-section {
  font-size: small;
  border: 1px solid #9f8e92;
  border-top-left-radius: 34px;
  background-color: #6d1022;
  padding-left: 10px;
  position: fixed;
  bottom: -10px;
  right: 0px;
  opacity: 20%;
}
.footer-part{
  height: 90px;
  background-color: black;

}
footer .floating-footer {
  font-size: small;
  border: 1px solid #9f8e92;
  border-top-left-radius: 34px;
  background-color: #6d1022;
  padding-left: 10px;
  position: fixed;
  bottom: -10px;
  right: 0px;
  opacity: 20%;
}

footer {
  position: relative;
  width: 100%;
  color: white;
  box-shadow: rgb(0 0 0 / 15%) 0px 0px 16px 9px;
  padding: 15px 0px;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding-bottom: 0;
}

footer a {
  color: var(--light-color);
  font-size: 22px;
  text-decoration: none;
}

footer a:hover {
  text-decoration: underline;
}

footer p {
  margin: 0;

}

.footer-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0.2rem 0;
  gap: 0.3rem;
}

.icons ul {
  display: flex;
  margin: 0;
  padding: 0;
}

.icons ul li {
  list-style: none;
}

.icons ul li a {
  display: block;
  position: relative;
  width: 25px;
  height: 25px;
  background-color: #fff;
  text-align: center;
  line-height: 20px;
  font-size: 15px;
  margin: 0 0 0 20px;
  border-radius: 50%;
  overflow: hidden;
  z-index: 1;
  border: 3px solid #fff;
}

.icons ul li a .icon {
  position: relative;
  color: #262626;
  transition: 0.5s;
  z-index: 3;
}

.icons ul li a:hover .icon {
  color: #fff;
  transform: rotateY(360deg);
}

.icons ul li a:before {
  content: "";
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 100%;
  background: #55acee;
  transition: 0.5s;
  z-index: 2;
}

.icons ul li a:hover:before {
  top: 0;
}

.icons ul li:nth-child(2) a:before {
  background: black;
}

.icons ul li:nth-child(4) a:before {
  background: rgb(197, 24, 111);
}

body{
  margin-bottom: 0;
}
